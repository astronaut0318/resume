server:
  port: 9000
  # 增加HTTP头部大小限制，解决431 REQUEST_HEADER_FIELDS_TOO_LARGE问题
  max-http-header-size: 65536
  # 设置最大请求大小
  undertow:
    max-http-post-size: 10485760 # 10MB

spring:
  application:
    name: gateway-service
  
  # 允许Bean覆盖，避免因Bean冲突导致启动失败
  main:
    allow-bean-definition-overriding: true
  
  # 解决Swagger与Spring Boot的兼容性问题
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  
  # Knife4j配置
  knife4j:
    enable: true
    setting:
      language: zh-CN
      enableSwaggerModels: true
      enableDocumentManage: true
      swaggerModelName: 实体类列表
      enableVersion: false
      enableRequestCache: true
      enableHost: false
      enableUrlAuth: false
      enableHomeCustom: false
      enableSearch: true
  
  # Redis配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 10000
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
  
  # 网关配置
  cloud:
    # Nacos服务发现配置
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        namespace: d0e61529-b169-481a-8e64-6c652f5729c8
      config:
        server-addr: 127.0.0.1:8848
        file-extension: yaml
        namespace: d0e61529-b169-481a-8e64-6c652f5729c8
    
    # Gateway配置
    gateway:
      # 调整Netty Http头部大小限制和超时时间
      httpclient:
        response-timeout: 60000  # 60秒超时
        connect-timeout: 30000   # 30秒连接超时
      
      discovery:
        locator:
          enabled: true  # 启用服务发现
          lower-case-service-id: true  # 服务名小写
      
      # 跨域配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
            
      # 路由配置
      routes:
        # 用户服务Swagger文档路由
        - id: user-service-docs
          uri: lb://user-service
          predicates:
            - Path=/user/v2/api-docs/**,/user/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 认证服务Swagger文档路由
        - id: auth-service-docs
          uri: lb://auth-service
          predicates:
            - Path=/auth/v2/api-docs/**,/auth/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 模板服务Swagger文档路由
        - id: template-service-docs
          uri: lb://template-service
          predicates:
            - Path=/template/v2/api-docs/**,/template/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 简历服务Swagger文档路由
        - id: resume-service-docs
          uri: lb://resume-service
          predicates:
            - Path=/resume/v2/api-docs/**,/resume/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 文件服务Swagger文档路由
        - id: file-service-docs
          uri: lb://file-service
          predicates:
            - Path=/file/v2/api-docs/**,/file/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 订单服务Swagger文档路由
        - id: order-service-docs
          uri: lb://order-service
          predicates:
            - Path=/order/v2/api-docs/**,/order/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # AI服务Swagger文档路由
        - id: ai-service-docs
          uri: lb://ai-service
          predicates:
            - Path=/ai/v2/api-docs/**,/ai/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # 通知服务Swagger文档路由  
        - id: notification-service-docs
          uri: lb://notification-service
          predicates:
            - Path=/notification/v2/api-docs/**,/notification/v3/api-docs/**
          filters:
            - SwaggerHeaderFilter

        # Swagger UI资源路由
        - id: gateway-swagger
          uri: lb://gateway-service
          predicates:
            - Path=/swagger-ui/**,/swagger-resources/**,/webjars/**,/swagger-ui.html,/doc.html,/v2/api-docs,/v3/api-docs
            
        # 用户服务路由
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=2
            
        # 认证服务路由
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=2
            
        # 文件服务路由
        - id: file-service
          uri: lb://file-service
          predicates:
            - Path=/api/files/**
          filters:
            - StripPrefix=2
            
        # 订单服务路由
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/orders/**
          filters:
            - StripPrefix=2
            
        # 模板服务路由
        - id: template-service
          uri: lb://template-service
          predicates:
            - Path=/api/templates/**
          filters:
            - StripPrefix=2
            
        # 简历服务路由
        - id: resume-service
          uri: lb://resume-service
          predicates:
            - Path=/api/resumes/**
          filters:
            - StripPrefix=2
            
        # AI服务路由
        - id: ai-service
          uri: lb://ai-service
          predicates:
            - Path=/api/ai/**
          filters:
            - StripPrefix=2
            
        # 通知服务路由
        - id: notification-service
          uri: lb://notification-service
          predicates:
            - Path=/api/notifications/**
          filters:
            - StripPrefix=2
            
        # 管理员API路由
        - id: admin-api
          uri: lb://user-service
          predicates:
            - Path=/api/admin/**
          filters:
            - StripPrefix=2
            
        # 系统状态与配置路由
        - id: system-api
          uri: lb://gateway-service
          predicates:
            - Path=/api/status, /api/config/refresh
          filters:
            - StripPrefix=1

# JWT配置
jwt:
  # 使用base64编码的安全密钥
  secret: cHR1LXJlc3VtZS1zeXN0ZW0tc2VjcmV0LWtleS1mb3Itand0LXRva2VuLWdlbmVyYXRpb24tYW5kLXZlcmlmaWNhdGlvbi1zZWN1cmUxMjM0NTY3ODk=
  # 令牌有效期（秒）
  token-validity-in-seconds: 86400
  # 刷新令牌有效期（秒）
  refresh-token-validity-in-seconds: 604800

# 白名单接口配置，这些路径无需认证
gateway:
  security:
    ignore-urls:
      - /api/auth/login
      - /api/auth/register
      - /api/auth/captcha
      - /api/auth/refresh
      - /api/users/register
      - /api/templates/categories
      - /api/templates
      - /*/v2/api-docs
      - /*/v3/api-docs
      - /v2/api-docs
      - /v3/api-docs
      - /swagger-ui/**
      - /swagger-ui.html
      - /swagger-resources/**
      - /webjars/**
      - /doc.html
      - /**/swagger-ui/**
      - /**/swagger-ui.html

# Sentinel配置
sentinel:
  transport:
    dashboard: localhost:8858
  eager: true
  # 网关流控适配
  scg:
    fallback:
      mode: response
      response-status: 429
      response-body: '{"code":429,"message":"请求过于频繁，请稍后重试","data":null}'

# 与Swagger相关的配置
springfox:
  documentation:
    enabled: true
    swagger-ui:
      base-url: /

# 添加详细的日志配置
logging:
  level:
    root: INFO
    com.ptu.gateway: DEBUG
    com.ptu.gateway.filter: DEBUG
    org.springframework.cloud.gateway: INFO
    org.springframework.http.server.reactive: INFO
    # 降低Swagger相关日志级别，减少日志输出
    springfox.documentation: WARN
    springfox.documentation.swagger: WARN
  # 控制台日志格式
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" 